{"version":3,"file":"bundle.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lib/period.js","node_modules/moment-range/lib/moment-range.js","node_modules/moment/moment.js"],"names":["createDateObject","periodMode","momentToUse","newValue","formatToUse","getShortPeriodFormat","clonedMoment","moment","setPeriodOnMoment","key","format","value","PERIOD_MODES","DAYS","WEEKS","MONTHS","QUARTERS","HALF_YEAR","YEARS","TOTAL","getLongPeriodFormat","getPeriodGroupFormat","getMomentSetterFunction","isNewPeriodGroup","date","dayOfYear","getMomentRangeIterator","setterFunction","getNumberOfDaysInMonth","year","month","Date","getDate","require","api","Period","start","end","this","range","values","prototype","getLongPeriodLabel","labelStart","getLongStringForStart","labelEnd","getLongStringForEnd","isEqual","periodToCompare","hasSameStart","hasSameEnd","hasSamePeriodMode","isSame","getLongStringFormat","getShortStringFormat","getGroupStringFormat","getValueAsObjects","periodInstance","momentRangeIterator","by","isNewGroup","push","createPeriod","_getNumberOfDaysInMonth","_setPeriodOnMoment","_isNewPeriodGroup","module","exports","root","factory","define","amd","DateRange","INTERVALS","week","day","hour","minute","second","contains","other","_by_string","interval","hollaback","current","_results","call","clone","add","_by_range","range_interval","i","l","_i","Math","floor","Infinity","valueOf","overlaps","intersect","_ref","_ref1","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","subtract","toDate","diff","unit","fn","startOf","endOf","within","_d","undefined","dfl","a","b","c","arguments","length","Error","hasOwnProp","hasOwnProperty","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","printMsg","msg","suppressDeprecationWarnings","console","warn","deprecate","firstTime","extend","apply","deprecateSimple","name","deprecations","padToken","func","count","leftZeroFill","ordinalizeToken","period","localeData","ordinal","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","meridiemFixWrap","locale","meridiem","isPm","meridiemHour","isPM","Locale","Moment","config","skipOverflow","checkOverflow","copyConfig","updateInProgress","updateOffset","Duration","duration","normalizedInput","normalizeObjectUnits","years","quarters","quarter","months","weeks","days","hours","minutes","seconds","milliseconds","millisecond","_milliseconds","_days","_months","_data","_locale","_bubble","toString","to","from","prop","val","_isAMomentObject","_f","_l","_strict","_tzm","_isUTC","_offset","_pf","momentProperties","absRound","number","ceil","targetLength","forceSign","output","abs","sign","positiveMomentsDifference","base","res","isAfter","momentsDifference","makeAs","isBefore","createAdder","direction","dur","tmp","isNaN","addOrSubtractDurationFromMoment","mom","isAdding","setTime","rawSetter","rawGetter","rawMonthSetter","isArray","input","Object","isDate","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","diffs","toInt","normalizeUnits","units","lowered","toLowerCase","replace","unitAliases","camelFunctions","inputObject","normalizedProp","makeList","field","setter","indexOf","index","getter","method","results","m","utc","set","argumentForCoercion","coercedNumber","isFinite","daysInMonth","UTC","getUTCDate","weeksInYear","dow","doy","weekOfYear","daysInYear","isLeapYear","_a","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","isValid","_isValid","getTime","bigHour","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","slice","join","oldLocale","locales","hasModule","e","model","isMoment","local","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatTokenFunctions","Function","formatMoment","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","longDateFormat","localFormattingTokens","lastIndex","test","getParseRegexForToken","token","strict","parseTokenOneDigit","parseTokenThreeDigits","parseTokenFourDigits","parseTokenOneToFourDigits","parseTokenSignedNumber","parseTokenSixDigits","parseTokenOneToSixDigits","parseTokenTwoDigits","parseTokenOneToThreeDigits","parseTokenWord","_meridiemParse","parseTokenOffsetMs","parseTokenTimestampMs","parseTokenTimezone","parseTokenT","parseTokenDigits","parseTokenOneOrTwoDigits","_ordinalParse","_ordinalParseLenient","RegExp","regexpEscape","unescapeFormat","utcOffsetFromString","string","possibleTzMatches","tzChunk","parts","parseTimezoneChunker","addTimeToArrayFromToken","datePartArray","monthsParse","parseInt","_dayOfYear","parseTwoDigitYear","_meridiem","parseFloat","_useUTC","weekdaysParse","_w","invalidWeekday","substr","dayOfYearFromWeekInfo","w","weekYear","weekday","temp","GG","W","E","_week","gg","d","dayOfYearFromWeeks","dateFromConfig","currentDate","yearToUse","currentDateArray","makeUTCDate","getUTCMonth","_nextDay","makeDate","setUTCMinutes","getUTCMinutes","dateFromObject","now","getUTCFullYear","getFullYear","getMonth","makeDateFromStringAndFormat","ISO_8601","parseISO","parsedInput","tokens","skipped","stringLength","totalParsedInputLength","s","matched","p1","p2","p3","p4","makeDateFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","NaN","score","isoRegex","exec","isoDates","isoTimes","makeDateFromString","createFromInputFallback","map","arr","makeDateFromInput","aspNetJsonRegex","obj","y","h","M","ms","setFullYear","setUTCFullYear","parseWeekday","substituteTimeAgo","withoutSuffix","isFuture","relativeTime","posNegDuration","round","as","args","relativeTimeThresholds","firstDayOfWeek","firstDayOfWeekOfYear","adjustedMoment","daysToDayOfWeek","daysToAdd","getUTCDay","makeMoment","invalid","preparse","pickBy","moments","dayOfMonth","makeAccessor","keepTime","daysToYears","yearsToDays","makeDurationGetter","makeGlobal","shouldDeprecate","ender","oldGlobalMoment","globalScope","VERSION","global","window","aspNetTimeSpanJsonRegex","isoDurationRegex","isoFormat","unitMillisecondFactors","Milliseconds","Seconds","Minutes","Hours","Days","Months","Years","D","Q","DDD","dayofyear","isoweekday","isoweek","weekyear","isoweekyear","ordinalizeTokens","paddedTokens","MMM","monthsShort","MMMM","dd","weekdaysMin","ddd","weekdaysShort","dddd","weekdays","isoWeek","YY","YYYY","YYYYY","YYYYYY","gggg","ggggg","isoWeekYear","GGGG","GGGGG","isoWeekday","A","H","S","SS","SSS","SSSS","Z","utcOffset","ZZ","z","zoneAbbr","zz","zoneName","x","X","unix","lists","pop","DDDD","source","_monthsShort","monthName","regex","_monthsParse","_longMonthsParse","_shortMonthsParse","_weekdays","_weekdaysShort","_weekdaysMin","weekdayName","_weekdaysParse","_longDateFormat","LTS","LT","L","LL","LLL","LLLL","toUpperCase","charAt","isLower","_calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","calendar","_relativeTime","future","past","mm","hh","MM","yy","pastFuture","_ordinal","postformat","firstDayOfYear","_invalidDate","max","ret","parseIso","diffRes","isDuration","inp","version","defaultFormat","relativeTimeThreshold","threshold","limit","lang","data","defineLocale","_abbr","abbr","langData","flags","parseZone","toISOString","toArray","isDSTShifted","parsingFlags","invalidAt","keepLocalTime","_dateUtcOffset","inputString","asFloat","that","zoneDiff","time","humanize","fromNow","sod","isDST","getDay","inputMs","isBetween","zone","localAdjust","offset","_changeInProgress","isLocal","isUtcOffset","isUtc","hasAlignedHourOffset","isoWeeksInYear","weekInfo","get","newLocaleData","getTimezoneOffset","dates","isoWeeks","toJSON","isUTC","withSuffix","toIsoString","asSeconds","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","ordinalParse","noGlobal"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * gfk-period\n * user/repo\n *\n * Copyright (c) 2015\n * Licensed under the MIT license.\n */\n\n'use strict';\n//If require is available use it, elsewise trust on a global to be present\nif(require) {\n  var moment = require('moment') || moment;\n  require('moment-range');\n}\n/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\nvar api,\n  Period,\n  PERIOD_MODES = {\n    DAYS: 'd',\n    WEEKS: 'w',\n    MONTHS: 'm',\n    QUARTERS: 'q',\n    HALF_YEAR: 'h',\n    YEARS: 'y'\n  };\n\n/**\n * A Period describes a time range from end to start and provides all dates\n * in the period in different formats\n * @param {string} periodMode Describes which time unit the period uses\n * @param {date|moment} start The date on which the period starts\n * @param {date|moment} end The date on which the period ends\n * @constructor\n */\nPeriod = function (periodMode, start, end) {\n\n  this.periodMode = periodMode;\n  this.start = moment(start);\n  this.end = moment(end);\n  this.range = moment().range(start, end);\n  this.values = null;\n};\n\nPeriod.prototype.getLongPeriodLabel = function () {\n  var labelStart = this.getLongStringForStart(),\n    labelEnd = this.getLongStringForEnd();\n\n  return labelStart + ' - ' + labelEnd;\n};\n\nPeriod.prototype.isEqual = function (periodToCompare) {\n  var hasSameStart,\n    hasSameEnd,\n    hasSamePeriodMode;\n\n  hasSameStart = this.start.isSame(periodToCompare.start);\n  hasSameEnd = this.end.isSame(periodToCompare.end);\n  hasSamePeriodMode = this.periodMode === periodToCompare.periodMode;\n\n  return hasSameStart && hasSameEnd && hasSamePeriodMode;\n};\n\nPeriod.prototype.getLongStringForStart = function () {\n  return this.start.format(getLongPeriodFormat(this.periodMode));\n};\n\nPeriod.prototype.getLongStringForEnd = function () {\n  return this.end.format(getLongPeriodFormat(this.periodMode));\n};\n\nPeriod.prototype.getLongStringFormat = function () {\n  return getLongPeriodFormat(this.periodMode);\n};\n\nPeriod.prototype.getShortStringFormat = function () {\n  return getShortPeriodFormat(this.periodMode);\n};\n\nPeriod.prototype.getGroupStringFormat = function () {\n  return getPeriodGroupFormat(this.periodMode);\n};\n\n/**\n * Returns DTO with all dates the period consists of, grouped by its PeriodMode\n * @returns array {{key: (string), value: (moment)}}\n */\nPeriod.prototype.getValueAsObjects = function () {\n  if (this.values !== null) {\n    return this.values;\n  }\n  var periodInstance = this,\n    momentRangeIterator = getMomentRangeIterator(this.periodMode);\n\n  this.values = [];\n  this.range.by(momentRangeIterator, function (momentToUse) {\n    momentToUse.isNewGroup = isNewPeriodGroup(periodInstance.periodMode, momentToUse);\n    periodInstance.values.push(momentToUse);\n  });\n  return this.values;\n};\n\n\n/**\n * Create a new key/value object from give moment with provided period set to a new value\n * Used as DTO for the front end\n * @param {string} periodMode Period which will be altered\n * @param {moment} momentToUse Moment object that will be cloned and formatted (provided moment will not be altered)\n * @param {number} [null] newValue number the given period will be set to\n * @returns {{key: (string), value: (moment)}}\n */\nfunction createDateObject(periodMode, momentToUse, newValue) {\n  var formatToUse = getShortPeriodFormat(periodMode),\n    clonedMoment = moment(momentToUse);\n\n  if (newValue) {\n    setPeriodOnMoment(periodMode, clonedMoment, newValue);\n  }\n\n  return {\n    key: clonedMoment.format(formatToUse),\n    value: clonedMoment\n  }\n}\n\n\nfunction getShortPeriodFormat(periodMode) {\n  if (periodMode === 'ytd') {\n    return '[YTD] YY';\n  }\n  switch (periodMode[0]) {\n    case PERIOD_MODES.DAYS:\n      return 'DD.';\n    case PERIOD_MODES.WEEKS:\n      return '[KW] W YYYY';\n    case PERIOD_MODES.MONTHS:\n      return 'MMMM YYYY';\n    case PERIOD_MODES.QUARTERS:\n      return '[Q.]Q YYYY';\n    case PERIOD_MODES.HALF_YEAR:\n      return 'Q. [Halbjahr] YYYY';\n    case PERIOD_MODES.YEARS:\n      return 'YYYY';\n    case PERIOD_MODES.TOTAL:\n      return '[Total]';\n  }\n  throw 'No short period format found for \"' + periodMode + '\"';\n}\n\nfunction getLongPeriodFormat(periodMode) {\n  if (periodMode === 'ytd') {\n    return '[YTD] YYYY';\n  }\n  switch (periodMode[0]) {\n    case PERIOD_MODES.DAYS:\n      return 'DD.MM.YYYY';\n    case PERIOD_MODES.WEEKS:\n      return '[KW] W YYYY';\n    case PERIOD_MODES.MONTHS:\n      return 'MMMM YYYY';\n    case PERIOD_MODES.QUARTERS:\n      return '[Q.]Q YYYY';\n    case PERIOD_MODES.HALF_YEAR:\n      return 'Q. [Halbjahr] YYYY';\n    case PERIOD_MODES.YEARS:\n      return 'YYYY';\n    case PERIOD_MODES.TOTAL:\n      return '[Total]';\n  }\n  throw 'No long period format found for \"' + periodMode + '\"';\n}\n\nfunction getPeriodGroupFormat(periodMode) {\n  if (periodMode === 'ytd') {\n    return '[YTD] YYYY';\n  }\n  switch (periodMode[0]) {\n    case PERIOD_MODES.DAYS:\n      return 'DD. MMMM';\n    case PERIOD_MODES.WEEKS:\n      return '[KW] W GGGG';\n    case PERIOD_MODES.MONTHS:\n      return 'MMMM YYYY';\n    case PERIOD_MODES.QUARTERS:\n      return '[Q%Q%] YYYY';\n    case PERIOD_MODES.HALF_YEAR:\n      return '[H%H%] YYYY';\n    case PERIOD_MODES.YEARS:\n      return 'YYYY';\n    case PERIOD_MODES.TOTAL:\n      return '[Total]';\n  }\n  throw 'No long period format found for \"' + periodMode + '\"';\n}\n\nfunction getMomentSetterFunction(periodMode) {\n  switch (periodMode) {\n    case PERIOD_MODES.DAYS:\n      return 'date';\n    case PERIOD_MODES.WEEKS:\n      return 'week';\n    case PERIOD_MODES.MONTHS:\n      return 'month';\n    case PERIOD_MODES.QUARTERS:\n      return 'quarter';\n    case PERIOD_MODES.YEARS:\n      return 'year';\n  }\n  throw 'No moment setter found for period \"' + periodMode + '\"';\n}\n\n/**\n * Show if the group of the date change according to given periodMode\n * Days are grouped in months, so this will return true on the first of every month\n * @param periodMode\n * @param momentToUse\n * @returns {bool}\n */\nfunction isNewPeriodGroup(periodMode, momentToUse) {\n  switch (periodMode) {\n    case PERIOD_MODES.DAYS:\n      return momentToUse.date() === 1;\n      break;\n    case PERIOD_MODES.WEEKS:\n      return momentToUse.date() === 1;\n      break;\n    case PERIOD_MODES.MONTHS:\n    case PERIOD_MODES.QUARTERS:\n      return momentToUse.dayOfYear() === 1;\n      break;\n    case PERIOD_MODES.YEARS:\n      return true;\n      break;\n  }\n  throw 'No newGroup rule found for period \"' + periodMode + '\"';\n}\n\nfunction getMomentRangeIterator(periodMode) {\n  switch (periodMode) {\n    case PERIOD_MODES.DAYS:\n      return 'days';\n    case PERIOD_MODES.WEEKS:\n      return 'weeks';\n    case PERIOD_MODES.MONTHS:\n      return 'months';\n    case PERIOD_MODES.QUARTERS:\n      return 'quarters';\n    case PERIOD_MODES.YEARS:\n      return 'years';\n  }\n  throw 'No moment setter found for period \"' + periodMode + '\"';\n}\n\nfunction setPeriodOnMoment(periodMode, moment, value) {\n  var setterFunction = getMomentSetterFunction(periodMode);\n  moment[setterFunction](value);\n}\n\n\n/**\n * Get the count of days in a specific month\n * @param {number} year Year of the date to be used\n * @param {number} month Zero based month to be used\n * @returns {number}\n */\nfunction getNumberOfDaysInMonth(year, month) {\n  return new Date(year, month + 1, 0).getDate();\n}\n\n\napi = {};\n\n/**\n * Create a new instance of Period\n * @param {string} periodMode PeriodMode of this instance\n * @param start Date when this period starts\n * @param end Date when this period ends\n * @returns {Period}\n */\napi.createPeriod = function (periodMode, start, end) {\n  return new Period(periodMode, start, end);\n};\n\napi.PERIOD_MODES = PERIOD_MODES;\n\n//Expose privates for testing\napi._getNumberOfDaysInMonth = getNumberOfDaysInMonth;\napi._setPeriodOnMoment = setPeriodOnMoment;\napi._isNewPeriodGroup = isNewPeriodGroup;\n\nmodule.exports = api;\n\n","(function(root, factory) {\n    if(typeof exports === 'object') {\n        module.exports = factory(require('moment'));\n    }\n    else if(typeof define === 'function' && define.amd) {\n        define(['moment'], factory);\n    }\n    else {\n        root.moment = factory(root.moment);\n    }\n}(this, function(moment) {\nvar DateRange, INTERVALS;\n\nINTERVALS = {\n  year: true,\n  month: true,\n  week: true,\n  day: true,\n  hour: true,\n  minute: true,\n  second: true\n};\n\n/**\n  * DateRange class to store ranges and query dates.\n  * @typedef {!Object}\n*\n*/\n\n\nDateRange = (function() {\n  /**\n    * DateRange instance.\n    *\n    * @param {(Moment|Date)} start Start of interval\n    * @param {(Moment|Date)} end   End of interval\n    *\n    * @constructor\n  *\n  */\n\n  function DateRange(start, end) {\n    this.start = moment(start);\n    this.end = moment(end);\n  }\n\n  /**\n    * Determine if the current interval contains a given moment/date/range.\n    *\n    * @param {(Moment|Date|DateRange)} other Date to check\n    *\n    * @return {!boolean}\n  *\n  */\n\n\n  DateRange.prototype.contains = function(other) {\n    if (other instanceof DateRange) {\n      return this.start <= other.start && this.end >= other.end;\n    } else {\n      return (this.start <= other && other <= this.end);\n    }\n  };\n\n  /**\n    * @private\n  *\n  */\n\n\n  DateRange.prototype._by_string = function(interval, hollaback) {\n    var current, _results;\n    current = moment(this.start);\n    _results = [];\n    while (this.contains(current)) {\n      hollaback.call(this, current.clone());\n      _results.push(current.add(1, interval));\n    }\n    return _results;\n  };\n\n  /**\n    * @private\n  *\n  */\n\n\n  DateRange.prototype._by_range = function(range_interval, hollaback) {\n    var i, l, _i, _results;\n    l = Math.floor(this / range_interval);\n    if (l === Infinity) {\n      return this;\n    }\n    _results = [];\n    for (i = _i = 0; 0 <= l ? _i <= l : _i >= l; i = 0 <= l ? ++_i : --_i) {\n      _results.push(hollaback.call(this, moment(this.start.valueOf() + range_interval.valueOf() * i)));\n    }\n    return _results;\n  };\n\n  /**\n    * Determine if the current date range overlaps a given date range.\n    *\n    * @param {!DateRange} range Date range to check\n    *\n    * @return {!boolean}\n  *\n  */\n\n\n  DateRange.prototype.overlaps = function(range) {\n    return this.intersect(range) !== null;\n  };\n\n  /**\n    * Determine the intersecting periods from one or more date ranges.\n    *\n    * @param {!DateRange} other A date range to intersect with this one\n    *\n    * @return {!DateRange|null}\n  *\n  */\n\n\n  DateRange.prototype.intersect = function(other) {\n    var _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;\n    if (((this.start <= (_ref1 = other.start) && _ref1 < (_ref = this.end)) && _ref < other.end)) {\n      return new DateRange(other.start, this.end);\n    } else if (((other.start < (_ref3 = this.start) && _ref3 < (_ref2 = other.end)) && _ref2 <= this.end)) {\n      return new DateRange(this.start, other.end);\n    } else if (((other.start < (_ref5 = this.start) && _ref5 < (_ref4 = this.end)) && _ref4 < other.end)) {\n      return this;\n    } else if (((this.start <= (_ref7 = other.start) && _ref7 < (_ref6 = other.end)) && _ref6 <= this.end)) {\n      return other;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n    * Subtract one range from another.\n    *\n    * @param {!DateRange} other A date range to substract from this one\n    *\n    * @return {!DateRange[]}\n  *\n  */\n\n\n  DateRange.prototype.subtract = function(other) {\n    var _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;\n    if (this.intersect(other) === null) {\n      return [this];\n    } else if (((other.start <= (_ref1 = this.start) && _ref1 < (_ref = this.end)) && _ref <= other.end)) {\n      return [];\n    } else if (((other.start <= (_ref3 = this.start) && _ref3 < (_ref2 = other.end)) && _ref2 < this.end)) {\n      return [new DateRange(other.end, this.end)];\n    } else if (((this.start < (_ref5 = other.start) && _ref5 < (_ref4 = this.end)) && _ref4 <= other.end)) {\n      return [new DateRange(this.start, other.start)];\n    } else if (((this.start < (_ref7 = other.start) && _ref7 < (_ref6 = other.end)) && _ref6 < this.end)) {\n      return [new DateRange(this.start, other.start), new DateRange(other.end, this.end)];\n    }\n  };\n\n  /**\n    * Iterate over the date range by a given date range, executing a function\n    * for each sub-range.\n    *\n    * @param {(!DateRange|String)} range     Date range to be used for iteration\n    *                                        or shorthand string (shorthands:\n    *                                        http://momentjs.com/docs/#/manipulating/add/)\n    * @param {!function(Moment)}   hollaback Function to execute for each sub-range\n    *\n    * @return {!boolean}\n  *\n  */\n\n\n  DateRange.prototype.by = function(range, hollaback) {\n    if (typeof range === 'string') {\n      this._by_string(range, hollaback);\n    } else {\n      this._by_range(range, hollaback);\n    }\n    return this;\n  };\n\n  /**\n    * Date range in milliseconds. Allows basic coercion math of date ranges.\n    *\n    * @return {!number}\n  *\n  */\n\n\n  DateRange.prototype.valueOf = function() {\n    return this.end - this.start;\n  };\n\n  /**\n    * Date range toDate\n    *\n    * @return {!Array}\n  *\n  */\n\n\n  DateRange.prototype.toDate = function() {\n    return [this.start.toDate(), this.end.toDate()];\n  };\n\n  /**\n    * Determine if this date range is the same as another.\n    *\n    * @param {!DateRange} other Another date range to compare to\n    *\n    * @return {!boolean}\n  *\n  */\n\n\n  DateRange.prototype.isSame = function(other) {\n    return this.start.isSame(other.start) && this.end.isSame(other.end);\n  };\n\n  /**\n    * The difference of the end vs start.\n    *\n    * @param {number} unit Unit of difference, if no unit is passed in\n    *                      milliseconds are returned. E.g.: `\"days\"`,\n    *                      `\"months\"`, etc...\n    *\n    * @return {!number}\n  *\n  */\n\n\n  DateRange.prototype.diff = function(unit) {\n    if (unit == null) {\n      unit = void 0;\n    }\n    return this.end.diff(this.start, unit);\n  };\n\n  return DateRange;\n\n})();\n\n/**\n  * Build a date range.\n  *\n  * @param {(Moment|Date)} start Start of range\n  * @param {(Moment|Date)} end   End of range\n  *\n  * @this {Moment}\n  *\n  * @return {!DateRange}\n*\n*/\n\n\nmoment.fn.range = function(start, end) {\n  if (start in INTERVALS) {\n    return new DateRange(moment(this).startOf(start), moment(this).endOf(start));\n  } else {\n    return new DateRange(start, end);\n  }\n};\n\n/**\n  * Build a date range.\n  *\n  * @param {(Moment|Date)} start Start of range\n  * @param {(Moment|Date)} end   End of range\n  *\n  * @this {Moment}\n  *\n  * @return {!DateRange}\n*\n*/\n\n\nmoment.range = function(start, end) {\n  return new DateRange(start, end);\n};\n\n/**\n  * Check if the current moment is within a given date range.\n  *\n  * @param {!DateRange} range Date range to check\n  *\n  * @this {Moment}\n  *\n  * @return {!boolean}\n*\n*/\n\n\nmoment.fn.within = function(range) {\n  return range.contains(this._d);\n};\n\n    return moment;\n}));\n","//! moment.js\n//! version : 2.9.0\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (undefined) {\n    /************************************\n        Constants\n    ************************************/\n\n    var moment,\n        VERSION = '2.9.0',\n        // the global-scope this is NOT the global object in Node.js\n        globalScope = (typeof global !== 'undefined' && (typeof window === 'undefined' || window === global.window)) ? global : this,\n        oldGlobalMoment,\n        round = Math.round,\n        hasOwnProperty = Object.prototype.hasOwnProperty,\n        i,\n\n        YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n\n        // internal storage for locale config files\n        locales = {},\n\n        // extra moment internal properties (plugins register props here)\n        momentProperties = [],\n\n        // check for nodeJS\n        hasModule = (typeof module !== 'undefined' && module && module.exports),\n\n        // ASP.NET json date format regex\n        aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n        aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\n        // format tokens\n        formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n\n        // parsing token regexes\n        parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n        parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n        parseTokenOneToFourDigits = /\\d{1,4}/, // 0 - 9999\n        parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n        parseTokenDigits = /\\d+/, // nonzero number of digits\n        parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.\n        parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        parseTokenT = /T/i, // T (ISO separator)\n        parseTokenOffsetMs = /[\\+\\-]?\\d+/, // 1234567890123\n        parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n\n        //strict parsing regexes\n        parseTokenOneDigit = /\\d/, // 0 - 9\n        parseTokenTwoDigits = /\\d\\d/, // 00 - 99\n        parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n        parseTokenFourDigits = /\\d{4}/, // 0000 - 9999\n        parseTokenSixDigits = /[+-]?\\d{6}/, // -999,999 - 999,999\n        parseTokenSignedNumber = /[+-]?\\d+/, // -inf - inf\n\n        // iso 8601 regex\n        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n        isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\n        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n            ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/]\n        ],\n\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n            ['HH', /(T| )\\d\\d/]\n        ],\n\n        // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-', '15', '30']\n        parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\n        // getter and setter names\n        proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n        unitMillisecondFactors = {\n            'Milliseconds' : 1,\n            'Seconds' : 1e3,\n            'Minutes' : 6e4,\n            'Hours' : 36e5,\n            'Days' : 864e5,\n            'Months' : 2592e6,\n            'Years' : 31536e6\n        },\n\n        unitAliases = {\n            ms : 'millisecond',\n            s : 'second',\n            m : 'minute',\n            h : 'hour',\n            d : 'day',\n            D : 'date',\n            w : 'week',\n            W : 'isoWeek',\n            M : 'month',\n            Q : 'quarter',\n            y : 'year',\n            DDD : 'dayOfYear',\n            e : 'weekday',\n            E : 'isoWeekday',\n            gg: 'weekYear',\n            GG: 'isoWeekYear'\n        },\n\n        camelFunctions = {\n            dayofyear : 'dayOfYear',\n            isoweekday : 'isoWeekday',\n            isoweek : 'isoWeek',\n            weekyear : 'weekYear',\n            isoweekyear : 'isoWeekYear'\n        },\n\n        // format function strings\n        formatFunctions = {},\n\n        // default relative time thresholds\n        relativeTimeThresholds = {\n            s: 45,  // seconds to minute\n            m: 45,  // minutes to hour\n            h: 22,  // hours to day\n            d: 26,  // days to month\n            M: 11   // months to year\n        },\n\n        // tokens to ordinalize and pad\n        ordinalizeTokens = 'DDD w W M D d'.split(' '),\n        paddedTokens = 'M D H h m s w W'.split(' '),\n\n        formatTokenFunctions = {\n            M    : function () {\n                return this.month() + 1;\n            },\n            MMM  : function (format) {\n                return this.localeData().monthsShort(this, format);\n            },\n            MMMM : function (format) {\n                return this.localeData().months(this, format);\n            },\n            D    : function () {\n                return this.date();\n            },\n            DDD  : function () {\n                return this.dayOfYear();\n            },\n            d    : function () {\n                return this.day();\n            },\n            dd   : function (format) {\n                return this.localeData().weekdaysMin(this, format);\n            },\n            ddd  : function (format) {\n                return this.localeData().weekdaysShort(this, format);\n            },\n            dddd : function (format) {\n                return this.localeData().weekdays(this, format);\n            },\n            w    : function () {\n                return this.week();\n            },\n            W    : function () {\n                return this.isoWeek();\n            },\n            YY   : function () {\n                return leftZeroFill(this.year() % 100, 2);\n            },\n            YYYY : function () {\n                return leftZeroFill(this.year(), 4);\n            },\n            YYYYY : function () {\n                return leftZeroFill(this.year(), 5);\n            },\n            YYYYYY : function () {\n                var y = this.year(), sign = y >= 0 ? '+' : '-';\n                return sign + leftZeroFill(Math.abs(y), 6);\n            },\n            gg   : function () {\n                return leftZeroFill(this.weekYear() % 100, 2);\n            },\n            gggg : function () {\n                return leftZeroFill(this.weekYear(), 4);\n            },\n            ggggg : function () {\n                return leftZeroFill(this.weekYear(), 5);\n            },\n            GG   : function () {\n                return leftZeroFill(this.isoWeekYear() % 100, 2);\n            },\n            GGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 4);\n            },\n            GGGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 5);\n            },\n            e : function () {\n                return this.weekday();\n            },\n            E : function () {\n                return this.isoWeekday();\n            },\n            a    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), true);\n            },\n            A    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), false);\n            },\n            H    : function () {\n                return this.hours();\n            },\n            h    : function () {\n                return this.hours() % 12 || 12;\n            },\n            m    : function () {\n                return this.minutes();\n            },\n            s    : function () {\n                return this.seconds();\n            },\n            S    : function () {\n                return toInt(this.milliseconds() / 100);\n            },\n            SS   : function () {\n                return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n            },\n            SSS  : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            SSSS : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            Z    : function () {\n                var a = this.utcOffset(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);\n            },\n            ZZ   : function () {\n                var a = this.utcOffset(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n            },\n            z : function () {\n                return this.zoneAbbr();\n            },\n            zz : function () {\n                return this.zoneName();\n            },\n            x    : function () {\n                return this.valueOf();\n            },\n            X    : function () {\n                return this.unix();\n            },\n            Q : function () {\n                return this.quarter();\n            }\n        },\n\n        deprecations = {},\n\n        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'],\n\n        updateInProgress = false;\n\n    // Pick the first defined of two or three arguments. dfl comes from\n    // default.\n    function dfl(a, b, c) {\n        switch (arguments.length) {\n            case 2: return a != null ? a : b;\n            case 3: return a != null ? a : b != null ? b : c;\n            default: throw new Error('Implement me');\n        }\n    }\n\n    function hasOwnProp(a, b) {\n        return hasOwnProperty.call(a, b);\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object, and es5 standard is not very\n        // helpful.\n        return {\n            empty : false,\n            unusedTokens : [],\n            unusedInput : [],\n            overflow : -2,\n            charsLeftOver : 0,\n            nullInput : false,\n            invalidMonth : null,\n            invalidFormat : false,\n            userInvalidated : false,\n            iso: false\n        };\n    }\n\n    function printMsg(msg) {\n        if (moment.suppressDeprecationWarnings === false &&\n                typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n        return extend(function () {\n            if (firstTime) {\n                printMsg(msg);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            printMsg(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    function padToken(func, count) {\n        return function (a) {\n            return leftZeroFill(func.call(this, a), count);\n        };\n    }\n    function ordinalizeToken(func, period) {\n        return function (a) {\n            return this.localeData().ordinal(func.call(this, a), period);\n        };\n    }\n\n    function monthDiff(a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        return -(wholeMonthDiff + adjust);\n    }\n\n    while (ordinalizeTokens.length) {\n        i = ordinalizeTokens.pop();\n        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);\n    }\n    while (paddedTokens.length) {\n        i = paddedTokens.pop();\n        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n    }\n    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // thie is not supposed to happen\n            return hour;\n        }\n    }\n\n    /************************************\n        Constructors\n    ************************************/\n\n    function Locale() {\n    }\n\n    // Moment prototype object\n    function Moment(config, skipOverflow) {\n        if (skipOverflow !== false) {\n            checkOverflow(config);\n        }\n        copyConfig(this, config);\n        this._d = new Date(+config._d);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            moment.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    // Duration Constructor\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = moment.localeData();\n\n        this._bubble();\n    }\n\n    /************************************\n        Helpers\n    ************************************/\n\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = from._pf;\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    // left zero fill a number\n    // see http://jsperf.com/left-zero-filling for performance comparison\n    function leftZeroFill(number, targetLength, forceSign) {\n        var output = '' + Math.abs(number),\n            sign = number >= 0;\n\n        while (output.length < targetLength) {\n            output = '0' + output;\n        }\n        return (sign ? (forceSign ? '+' : '') : '-') + output;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = makeAs(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = moment.duration(val, period);\n            addOrSubtractDurationFromMoment(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            moment.updateOffset(mom, days || months);\n        }\n    }\n\n    // check if is an array\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return Object.prototype.toString.call(input) === '[object Date]' ||\n            input instanceof Date;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function normalizeUnits(units) {\n        if (units) {\n            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');\n            units = unitAliases[units] || camelFunctions[lowered] || lowered;\n        }\n        return units;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeList(field) {\n        var count, setter;\n\n        if (field.indexOf('week') === 0) {\n            count = 7;\n            setter = 'day';\n        }\n        else if (field.indexOf('month') === 0) {\n            count = 12;\n            setter = 'month';\n        }\n        else {\n            return;\n        }\n\n        moment[field] = function (format, index) {\n            var i, getter,\n                method = moment._locale[field],\n                results = [];\n\n            if (typeof format === 'number') {\n                index = format;\n                format = undefined;\n            }\n\n            getter = function (i) {\n                var m = moment().utc().set(setter, i);\n                return method.call(moment._locale, m, format || '');\n            };\n\n            if (index != null) {\n                return getter(index);\n            }\n            else {\n                for (i = 0; i < count; i++) {\n                    results.push(getter(i));\n                }\n                return results;\n            }\n        };\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            if (coercedNumber >= 0) {\n                value = Math.floor(coercedNumber);\n            } else {\n                value = Math.ceil(coercedNumber);\n            }\n        }\n\n        return value;\n    }\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function checkOverflow(m) {\n        var overflow;\n        if (m._a && m._pf.overflow === -2) {\n            overflow =\n                m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :\n                m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :\n                m._a[HOUR] < 0 || m._a[HOUR] > 24 ||\n                    (m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 ||\n                                           m._a[SECOND] !== 0 ||\n                                           m._a[MILLISECOND] !== 0)) ? HOUR :\n                m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :\n                m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :\n                m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            m._pf.overflow = overflow;\n        }\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            m._isValid = !isNaN(m._d.getTime()) &&\n                m._pf.overflow < 0 &&\n                !m._pf.empty &&\n                !m._pf.invalidMonth &&\n                !m._pf.nullInput &&\n                !m._pf.invalidFormat &&\n                !m._pf.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    m._pf.charsLeftOver === 0 &&\n                    m._pf.unusedTokens.length === 0 &&\n                    m._pf.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        if (!locales[name] && hasModule) {\n            try {\n                oldLocale = moment.locale();\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n                moment.locale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // Return a moment from input, that is local/utc/utcOffset equivalent to\n    // model.\n    function makeAs(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (moment.isMoment(input) || isDate(input) ?\n                    +input : +moment(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            moment.updateOffset(res, false);\n            return res;\n        } else {\n            return moment(input).local();\n        }\n    }\n\n    /************************************\n        Locale\n    ************************************/\n\n\n    extend(Locale.prototype, {\n\n        set : function (config) {\n            var prop, i;\n            for (i in config) {\n                prop = config[i];\n                if (typeof prop === 'function') {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n            // Lenient ordinal parsing accepts just a number in addition to\n            // number + (possibly) stuff coming from _ordinalParseLenient.\n            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\\d{1,2}/.source);\n        },\n\n        _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        months : function (m) {\n            return this._months[m.month()];\n        },\n\n        _monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        monthsShort : function (m) {\n            return this._monthsShort[m.month()];\n        },\n\n        monthsParse : function (monthName, format, strict) {\n            var i, mom, regex;\n\n            if (!this._monthsParse) {\n                this._monthsParse = [];\n                this._longMonthsParse = [];\n                this._shortMonthsParse = [];\n            }\n\n            for (i = 0; i < 12; i++) {\n                // make the regex if we don't have it already\n                mom = moment.utc([2000, i]);\n                if (strict && !this._longMonthsParse[i]) {\n                    this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                    this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n                }\n                if (!strict && !this._monthsParse[i]) {\n                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (!strict && this._monthsParse[i].test(monthName)) {\n                    return i;\n                }\n            }\n        },\n\n        _weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdays : function (m) {\n            return this._weekdays[m.day()];\n        },\n\n        _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysShort : function (m) {\n            return this._weekdaysShort[m.day()];\n        },\n\n        _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        weekdaysMin : function (m) {\n            return this._weekdaysMin[m.day()];\n        },\n\n        weekdaysParse : function (weekdayName) {\n            var i, mom, regex;\n\n            if (!this._weekdaysParse) {\n                this._weekdaysParse = [];\n            }\n\n            for (i = 0; i < 7; i++) {\n                // make the regex if we don't have it already\n                if (!this._weekdaysParse[i]) {\n                    mom = moment([2000, 1]).day(i);\n                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (this._weekdaysParse[i].test(weekdayName)) {\n                    return i;\n                }\n            }\n        },\n\n        _longDateFormat : {\n            LTS : 'h:mm:ss A',\n            LT : 'h:mm A',\n            L : 'MM/DD/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY LT',\n            LLLL : 'dddd, MMMM D, YYYY LT'\n        },\n        longDateFormat : function (key) {\n            var output = this._longDateFormat[key];\n            if (!output && this._longDateFormat[key.toUpperCase()]) {\n                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                    return val.slice(1);\n                });\n                this._longDateFormat[key] = output;\n            }\n            return output;\n        },\n\n        isPM : function (input) {\n            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n            // Using charAt should be more compatible.\n            return ((input + '').toLowerCase().charAt(0) === 'p');\n        },\n\n        _meridiemParse : /[ap]\\.?m?\\.?/i,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'pm' : 'PM';\n            } else {\n                return isLower ? 'am' : 'AM';\n            }\n        },\n\n\n        _calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        calendar : function (key, mom, now) {\n            var output = this._calendar[key];\n            return typeof output === 'function' ? output.apply(mom, [now]) : output;\n        },\n\n        _relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n\n        relativeTime : function (number, withoutSuffix, string, isFuture) {\n            var output = this._relativeTime[string];\n            return (typeof output === 'function') ?\n                output(number, withoutSuffix, string, isFuture) :\n                output.replace(/%d/i, number);\n        },\n\n        pastFuture : function (diff, output) {\n            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n        },\n\n        ordinal : function (number) {\n            return this._ordinal.replace('%d', number);\n        },\n        _ordinal : '%d',\n        _ordinalParse : /\\d{1,2}/,\n\n        preparse : function (string) {\n            return string;\n        },\n\n        postformat : function (string) {\n            return string;\n        },\n\n        week : function (mom) {\n            return weekOfYear(mom, this._week.dow, this._week.doy).week;\n        },\n\n        _week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        },\n\n        firstDayOfWeek : function () {\n            return this._week.dow;\n        },\n\n        firstDayOfYear : function () {\n            return this._week.doy;\n        },\n\n        _invalidDate: 'Invalid date',\n        invalidDate: function () {\n            return this._invalidDate;\n        }\n    });\n\n    /************************************\n        Formatting\n    ************************************/\n\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n\n    /************************************\n        Parsing\n    ************************************/\n\n\n    // get the regex to find the next token\n    function getParseRegexForToken(token, config) {\n        var a, strict = config._strict;\n        switch (token) {\n        case 'Q':\n            return parseTokenOneDigit;\n        case 'DDDD':\n            return parseTokenThreeDigits;\n        case 'YYYY':\n        case 'GGGG':\n        case 'gggg':\n            return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n        case 'Y':\n        case 'G':\n        case 'g':\n            return parseTokenSignedNumber;\n        case 'YYYYYY':\n        case 'YYYYY':\n        case 'GGGGG':\n        case 'ggggg':\n            return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n        case 'S':\n            if (strict) {\n                return parseTokenOneDigit;\n            }\n            /* falls through */\n        case 'SS':\n            if (strict) {\n                return parseTokenTwoDigits;\n            }\n            /* falls through */\n        case 'SSS':\n            if (strict) {\n                return parseTokenThreeDigits;\n            }\n            /* falls through */\n        case 'DDD':\n            return parseTokenOneToThreeDigits;\n        case 'MMM':\n        case 'MMMM':\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            return parseTokenWord;\n        case 'a':\n        case 'A':\n            return config._locale._meridiemParse;\n        case 'x':\n            return parseTokenOffsetMs;\n        case 'X':\n            return parseTokenTimestampMs;\n        case 'Z':\n        case 'ZZ':\n            return parseTokenTimezone;\n        case 'T':\n            return parseTokenT;\n        case 'SSSS':\n            return parseTokenDigits;\n        case 'MM':\n        case 'DD':\n        case 'YY':\n        case 'GG':\n        case 'gg':\n        case 'HH':\n        case 'hh':\n        case 'mm':\n        case 'ss':\n        case 'ww':\n        case 'WW':\n            return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n        case 'M':\n        case 'D':\n        case 'd':\n        case 'H':\n        case 'h':\n        case 'm':\n        case 's':\n        case 'w':\n        case 'W':\n        case 'e':\n        case 'E':\n            return parseTokenOneOrTwoDigits;\n        case 'Do':\n            return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;\n        default :\n            a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\\\', '')), 'i'));\n            return a;\n        }\n    }\n\n    function utcOffsetFromString(string) {\n        string = string || '';\n        var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n            minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // function to convert string input to date\n    function addTimeToArrayFromToken(token, input, config) {\n        var a, datePartArray = config._a;\n\n        switch (token) {\n        // QUARTER\n        case 'Q':\n            if (input != null) {\n                datePartArray[MONTH] = (toInt(input) - 1) * 3;\n            }\n            break;\n        // MONTH\n        case 'M' : // fall through to MM\n        case 'MM' :\n            if (input != null) {\n                datePartArray[MONTH] = toInt(input) - 1;\n            }\n            break;\n        case 'MMM' : // fall through to MMMM\n        case 'MMMM' :\n            a = config._locale.monthsParse(input, token, config._strict);\n            // if we didn't find a month name, mark the date as invalid.\n            if (a != null) {\n                datePartArray[MONTH] = a;\n            } else {\n                config._pf.invalidMonth = input;\n            }\n            break;\n        // DAY OF MONTH\n        case 'D' : // fall through to DD\n        case 'DD' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(input);\n            }\n            break;\n        case 'Do' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(parseInt(\n                            input.match(/\\d{1,2}/)[0], 10));\n            }\n            break;\n        // DAY OF YEAR\n        case 'DDD' : // fall through to DDDD\n        case 'DDDD' :\n            if (input != null) {\n                config._dayOfYear = toInt(input);\n            }\n\n            break;\n        // YEAR\n        case 'YY' :\n            datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n            break;\n        case 'YYYY' :\n        case 'YYYYY' :\n        case 'YYYYYY' :\n            datePartArray[YEAR] = toInt(input);\n            break;\n        // AM / PM\n        case 'a' : // fall through to A\n        case 'A' :\n            config._meridiem = input;\n            // config._isPm = config._locale.isPM(input);\n            break;\n        // HOUR\n        case 'h' : // fall through to hh\n        case 'hh' :\n            config._pf.bigHour = true;\n            /* falls through */\n        case 'H' : // fall through to HH\n        case 'HH' :\n            datePartArray[HOUR] = toInt(input);\n            break;\n        // MINUTE\n        case 'm' : // fall through to mm\n        case 'mm' :\n            datePartArray[MINUTE] = toInt(input);\n            break;\n        // SECOND\n        case 's' : // fall through to ss\n        case 'ss' :\n            datePartArray[SECOND] = toInt(input);\n            break;\n        // MILLISECOND\n        case 'S' :\n        case 'SS' :\n        case 'SSS' :\n        case 'SSSS' :\n            datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);\n            break;\n        // UNIX OFFSET (MILLISECONDS)\n        case 'x':\n            config._d = new Date(toInt(input));\n            break;\n        // UNIX TIMESTAMP WITH MS\n        case 'X':\n            config._d = new Date(parseFloat(input) * 1000);\n            break;\n        // TIMEZONE\n        case 'Z' : // fall through to ZZ\n        case 'ZZ' :\n            config._useUTC = true;\n            config._tzm = utcOffsetFromString(input);\n            break;\n        // WEEKDAY - human\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            a = config._locale.weekdaysParse(input);\n            // if we didn't get a weekday name, mark the date as invalid\n            if (a != null) {\n                config._w = config._w || {};\n                config._w['d'] = a;\n            } else {\n                config._pf.invalidWeekday = input;\n            }\n            break;\n        // WEEK, WEEK DAY - numeric\n        case 'w':\n        case 'ww':\n        case 'W':\n        case 'WW':\n        case 'd':\n        case 'e':\n        case 'E':\n            token = token.substr(0, 1);\n            /* falls through */\n        case 'gggg':\n        case 'GGGG':\n        case 'GGGGG':\n            token = token.substr(0, 2);\n            if (input) {\n                config._w = config._w || {};\n                config._w[token] = toInt(input);\n            }\n            break;\n        case 'gg':\n        case 'GG':\n            config._w = config._w || {};\n            config._w[token] = moment.parseTwoDigitYear(input);\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n            week = dfl(w.W, 1);\n            weekday = dfl(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n            week = dfl(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function dateFromConfig(config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                config._pf._overflowDayOfYear = true;\n            }\n\n            date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dateFromObject(config) {\n        var normalizedInput;\n\n        if (config._d) {\n            return;\n        }\n\n        normalizedInput = normalizeObjectUnits(config._i);\n        config._a = [\n            normalizedInput.year,\n            normalizedInput.month,\n            normalizedInput.day || normalizedInput.date,\n            normalizedInput.hour,\n            normalizedInput.minute,\n            normalizedInput.second,\n            normalizedInput.millisecond\n        ];\n\n        dateFromConfig(config);\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [\n                now.getUTCFullYear(),\n                now.getUTCMonth(),\n                now.getUTCDate()\n            ];\n        } else {\n            return [now.getFullYear(), now.getMonth(), now.getDate()];\n        }\n    }\n\n    // date from string and format string\n    function makeDateFromStringAndFormat(config) {\n        if (config._f === moment.ISO_8601) {\n            parseISO(config);\n            return;\n        }\n\n        config._a = [];\n        config._pf.empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    config._pf.unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    config._pf.empty = false;\n                }\n                else {\n                    config._pf.unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                config._pf.unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            config._pf.unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n            config._pf.bigHour = undefined;\n        }\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR],\n                config._meridiem);\n        dateFromConfig(config);\n        checkOverflow(config);\n    }\n\n    function unescapeFormat(s) {\n        return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        });\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function regexpEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    // date from string and array of format strings\n    function makeDateFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            config._pf.invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._pf = defaultParsingFlags();\n            tempConfig._f = config._f[i];\n            makeDateFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += tempConfig._pf.charsLeftOver;\n\n            //or tokens\n            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\n            tempConfig._pf.score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    // date from iso format\n    function parseISO(config) {\n        var i, l,\n            string = config._i,\n            match = isoRegex.exec(string);\n\n        if (match) {\n            config._pf.iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    // match[5] should be 'T' or undefined\n                    config._f = isoDates[i][0] + (match[6] || ' ');\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(parseTokenTimezone)) {\n                config._f += 'Z';\n            }\n            makeDateFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function makeDateFromString(config) {\n        parseISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function makeDateFromInput(config) {\n        var input = config._i, matched;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n            config._d = new Date(+matched[1]);\n        } else if (typeof input === 'string') {\n            makeDateFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            dateFromConfig(config);\n        } else if (typeof(input) === 'object') {\n            dateFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function makeDate(y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function makeUTCDate(y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    function parseWeekday(input, locale) {\n        if (typeof input === 'string') {\n            if (!isNaN(input)) {\n                input = parseInt(input, 10);\n            }\n            else {\n                input = locale.weekdaysParse(input);\n                if (typeof input !== 'number') {\n                    return null;\n                }\n            }\n        }\n        return input;\n    }\n\n    /************************************\n        Relative Time\n    ************************************/\n\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime(posNegDuration, withoutSuffix, locale) {\n        var duration = moment.duration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            years = round(duration.as('y')),\n\n            args = seconds < relativeTimeThresholds.s && ['s', seconds] ||\n                minutes === 1 && ['m'] ||\n                minutes < relativeTimeThresholds.m && ['mm', minutes] ||\n                hours === 1 && ['h'] ||\n                hours < relativeTimeThresholds.h && ['hh', hours] ||\n                days === 1 && ['d'] ||\n                days < relativeTimeThresholds.d && ['dd', days] ||\n                months === 1 && ['M'] ||\n                months < relativeTimeThresholds.M && ['MM', months] ||\n                years === 1 && ['y'] || ['yy', years];\n\n        args[2] = withoutSuffix;\n        args[3] = +posNegDuration > 0;\n        args[4] = locale;\n        return substituteTimeAgo.apply({}, args);\n    }\n\n\n    /************************************\n        Week of Year\n    ************************************/\n\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;\n\n        d = d === 0 ? 7 : d;\n        weekday = weekday != null ? weekday : firstDayOfWeek;\n        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n        return {\n            year: dayOfYear > 0 ? year : year - 1,\n            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    /************************************\n        Top Level Functions\n    ************************************/\n\n    function makeMoment(config) {\n        var input = config._i,\n            format = config._f,\n            res;\n\n        config._locale = config._locale || moment.localeData(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return moment.invalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (moment.isMoment(input)) {\n            return new Moment(input, true);\n        } else if (format) {\n            if (isArray(format)) {\n                makeDateFromStringAndArray(config);\n            } else {\n                makeDateFromStringAndFormat(config);\n            }\n        } else {\n            makeDateFromInput(config);\n        }\n\n        res = new Moment(config);\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    moment = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._i = input;\n        c._f = format;\n        c._l = locale;\n        c._strict = strict;\n        c._isUTC = false;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c);\n    };\n\n    moment.suppressDeprecationWarnings = false;\n\n    moment.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return moment();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    moment.min = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    };\n\n    moment.max = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    };\n\n    // creating with utc\n    moment.utc = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._useUTC = true;\n        c._isUTC = true;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c).utc();\n    };\n\n    // creating with unix timestamp (in seconds)\n    moment.unix = function (input) {\n        return moment(input * 1000);\n    };\n\n    // duration\n    moment.duration = function (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            parseIso,\n            diffRes;\n\n        if (moment.isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = isoDurationRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            parseIso = function (inp) {\n                // We'd normally use ~~inp for this, but unfortunately it also\n                // converts floats to ints.\n                // inp may be undefined, so careful calling replace on it.\n                var res = inp && parseFloat(inp.replace(',', '.'));\n                // apply sign while we're at it\n                return (isNaN(res) ? 0 : res) * sign;\n            };\n            duration = {\n                y: parseIso(match[2]),\n                M: parseIso(match[3]),\n                d: parseIso(match[4]),\n                h: parseIso(match[5]),\n                m: parseIso(match[6]),\n                s: parseIso(match[7]),\n                w: parseIso(match[8])\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' &&\n                ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    };\n\n    // version number\n    moment.version = VERSION;\n\n    // default format\n    moment.defaultFormat = isoFormat;\n\n    // constant that refers to the ISO standard\n    moment.ISO_8601 = function () {};\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    moment.momentProperties = momentProperties;\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    moment.updateOffset = function () {};\n\n    // This function allows you to set a threshold for relative time strings\n    moment.relativeTimeThreshold = function (threshold, limit) {\n        if (relativeTimeThresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return relativeTimeThresholds[threshold];\n        }\n        relativeTimeThresholds[threshold] = limit;\n        return true;\n    };\n\n    moment.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        function (key, value) {\n            return moment.locale(key, value);\n        }\n    );\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    moment.locale = function (key, values) {\n        var data;\n        if (key) {\n            if (typeof(values) !== 'undefined') {\n                data = moment.defineLocale(key, values);\n            }\n            else {\n                data = moment.localeData(key);\n            }\n\n            if (data) {\n                moment.duration._locale = moment._locale = data;\n            }\n        }\n\n        return moment._locale._abbr;\n    };\n\n    moment.defineLocale = function (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            if (!locales[name]) {\n                locales[name] = new Locale();\n            }\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            moment.locale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    };\n\n    moment.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        function (key) {\n            return moment.localeData(key);\n        }\n    );\n\n    // returns locale data\n    moment.localeData = function (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return moment._locale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    };\n\n    // compare moment object\n    moment.isMoment = function (obj) {\n        return obj instanceof Moment ||\n            (obj != null && hasOwnProp(obj, '_isAMomentObject'));\n    };\n\n    // for typechecking Duration objects\n    moment.isDuration = function (obj) {\n        return obj instanceof Duration;\n    };\n\n    for (i = lists.length - 1; i >= 0; --i) {\n        makeList(lists[i]);\n    }\n\n    moment.normalizeUnits = function (units) {\n        return normalizeUnits(units);\n    };\n\n    moment.invalid = function (flags) {\n        var m = moment.utc(NaN);\n        if (flags != null) {\n            extend(m._pf, flags);\n        }\n        else {\n            m._pf.userInvalidated = true;\n        }\n\n        return m;\n    };\n\n    moment.parseZone = function () {\n        return moment.apply(null, arguments).parseZone();\n    };\n\n    moment.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    moment.isDate = isDate;\n\n    /************************************\n        Moment Prototype\n    ************************************/\n\n\n    extend(moment.fn = Moment.prototype, {\n\n        clone : function () {\n            return moment(this);\n        },\n\n        valueOf : function () {\n            return +this._d - ((this._offset || 0) * 60000);\n        },\n\n        unix : function () {\n            return Math.floor(+this / 1000);\n        },\n\n        toString : function () {\n            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n        },\n\n        toDate : function () {\n            return this._offset ? new Date(+this) : this._d;\n        },\n\n        toISOString : function () {\n            var m = moment(this).utc();\n            if (0 < m.year() && m.year() <= 9999) {\n                if ('function' === typeof Date.prototype.toISOString) {\n                    // native implementation is ~50x faster, use it when we can\n                    return this.toDate().toISOString();\n                } else {\n                    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n                }\n            } else {\n                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        },\n\n        toArray : function () {\n            var m = this;\n            return [\n                m.year(),\n                m.month(),\n                m.date(),\n                m.hours(),\n                m.minutes(),\n                m.seconds(),\n                m.milliseconds()\n            ];\n        },\n\n        isValid : function () {\n            return isValid(this);\n        },\n\n        isDSTShifted : function () {\n            if (this._a) {\n                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n            }\n\n            return false;\n        },\n\n        parsingFlags : function () {\n            return extend({}, this._pf);\n        },\n\n        invalidAt: function () {\n            return this._pf.overflow;\n        },\n\n        utc : function (keepLocalTime) {\n            return this.utcOffset(0, keepLocalTime);\n        },\n\n        local : function (keepLocalTime) {\n            if (this._isUTC) {\n                this.utcOffset(0, keepLocalTime);\n                this._isUTC = false;\n\n                if (keepLocalTime) {\n                    this.subtract(this._dateUtcOffset(), 'm');\n                }\n            }\n            return this;\n        },\n\n        format : function (inputString) {\n            var output = formatMoment(this, inputString || moment.defaultFormat);\n            return this.localeData().postformat(output);\n        },\n\n        add : createAdder(1, 'add'),\n\n        subtract : createAdder(-1, 'subtract'),\n\n        diff : function (input, units, asFloat) {\n            var that = makeAs(input, this),\n                zoneDiff = (that.utcOffset() - this.utcOffset()) * 6e4,\n                anchor, diff, output, daysAdjust;\n\n            units = normalizeUnits(units);\n\n            if (units === 'year' || units === 'month' || units === 'quarter') {\n                output = monthDiff(this, that);\n                if (units === 'quarter') {\n                    output = output / 3;\n                } else if (units === 'year') {\n                    output = output / 12;\n                }\n            } else {\n                diff = this - that;\n                output = units === 'second' ? diff / 1e3 : // 1000\n                    units === 'minute' ? diff / 6e4 : // 1000 * 60\n                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60\n                    units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                    units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                    diff;\n            }\n            return asFloat ? output : absRound(output);\n        },\n\n        from : function (time, withoutSuffix) {\n            return moment.duration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        },\n\n        fromNow : function (withoutSuffix) {\n            return this.from(moment(), withoutSuffix);\n        },\n\n        calendar : function (time) {\n            // We want to compare the start of today, vs this.\n            // Getting start-of-today depends on whether we're locat/utc/offset\n            // or not.\n            var now = time || moment(),\n                sod = makeAs(now, this).startOf('day'),\n                diff = this.diff(sod, 'days', true),\n                format = diff < -6 ? 'sameElse' :\n                    diff < -1 ? 'lastWeek' :\n                    diff < 0 ? 'lastDay' :\n                    diff < 1 ? 'sameDay' :\n                    diff < 2 ? 'nextDay' :\n                    diff < 7 ? 'nextWeek' : 'sameElse';\n            return this.format(this.localeData().calendar(format, this, moment(now)));\n        },\n\n        isLeapYear : function () {\n            return isLeapYear(this.year());\n        },\n\n        isDST : function () {\n            return (this.utcOffset() > this.clone().month(0).utcOffset() ||\n                this.utcOffset() > this.clone().month(5).utcOffset());\n        },\n\n        day : function (input) {\n            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n            if (input != null) {\n                input = parseWeekday(input, this.localeData());\n                return this.add(input - day, 'd');\n            } else {\n                return day;\n            }\n        },\n\n        month : makeAccessor('Month', true),\n\n        startOf : function (units) {\n            units = normalizeUnits(units);\n            // the following switch intentionally omits break keywords\n            // to utilize falling through the cases.\n            switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n                /* falls through */\n            }\n\n            // weeks are a special case\n            if (units === 'week') {\n                this.weekday(0);\n            } else if (units === 'isoWeek') {\n                this.isoWeekday(1);\n            }\n\n            // quarters are also special\n            if (units === 'quarter') {\n                this.month(Math.floor(this.month() / 3) * 3);\n            }\n\n            return this;\n        },\n\n        endOf: function (units) {\n            units = normalizeUnits(units);\n            if (units === undefined || units === 'millisecond') {\n                return this;\n            }\n            return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n        },\n\n        isAfter: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this > +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return inputMs < +this.clone().startOf(units);\n            }\n        },\n\n        isBefore: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this < +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return +this.clone().endOf(units) < inputMs;\n            }\n        },\n\n        isBetween: function (from, to, units) {\n            return this.isAfter(from, units) && this.isBefore(to, units);\n        },\n\n        isSame: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(units || 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this === +input;\n            } else {\n                inputMs = +moment(input);\n                return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n            }\n        },\n\n        min: deprecate(\n                 'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n                 function (other) {\n                     other = moment.apply(null, arguments);\n                     return other < this ? this : other;\n                 }\n         ),\n\n        max: deprecate(\n                'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n                function (other) {\n                    other = moment.apply(null, arguments);\n                    return other > this ? this : other;\n                }\n        ),\n\n        zone : deprecate(\n                'moment().zone is deprecated, use moment().utcOffset instead. ' +\n                'https://github.com/moment/moment/issues/1779',\n                function (input, keepLocalTime) {\n                    if (input != null) {\n                        if (typeof input !== 'string') {\n                            input = -input;\n                        }\n\n                        this.utcOffset(input, keepLocalTime);\n\n                        return this;\n                    } else {\n                        return -this.utcOffset();\n                    }\n                }\n        ),\n\n        // keepLocalTime = true means only change the timezone, without\n        // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n        // +0200, so we adjust the time as needed, to be valid.\n        //\n        // Keeping the time actually adds/subtracts (one hour)\n        // from the actual represented time. That is why we call updateOffset\n        // a second time. In case it wants us to change the offset again\n        // _changeInProgress == true case, then we have to adjust, because\n        // there is no such time in the given timezone.\n        utcOffset : function (input, keepLocalTime) {\n            var offset = this._offset || 0,\n                localAdjust;\n            if (input != null) {\n                if (typeof input === 'string') {\n                    input = utcOffsetFromString(input);\n                }\n                if (Math.abs(input) < 16) {\n                    input = input * 60;\n                }\n                if (!this._isUTC && keepLocalTime) {\n                    localAdjust = this._dateUtcOffset();\n                }\n                this._offset = input;\n                this._isUTC = true;\n                if (localAdjust != null) {\n                    this.add(localAdjust, 'm');\n                }\n                if (offset !== input) {\n                    if (!keepLocalTime || this._changeInProgress) {\n                        addOrSubtractDurationFromMoment(this,\n                                moment.duration(input - offset, 'm'), 1, false);\n                    } else if (!this._changeInProgress) {\n                        this._changeInProgress = true;\n                        moment.updateOffset(this, true);\n                        this._changeInProgress = null;\n                    }\n                }\n\n                return this;\n            } else {\n                return this._isUTC ? offset : this._dateUtcOffset();\n            }\n        },\n\n        isLocal : function () {\n            return !this._isUTC;\n        },\n\n        isUtcOffset : function () {\n            return this._isUTC;\n        },\n\n        isUtc : function () {\n            return this._isUTC && this._offset === 0;\n        },\n\n        zoneAbbr : function () {\n            return this._isUTC ? 'UTC' : '';\n        },\n\n        zoneName : function () {\n            return this._isUTC ? 'Coordinated Universal Time' : '';\n        },\n\n        parseZone : function () {\n            if (this._tzm) {\n                this.utcOffset(this._tzm);\n            } else if (typeof this._i === 'string') {\n                this.utcOffset(utcOffsetFromString(this._i));\n            }\n            return this;\n        },\n\n        hasAlignedHourOffset : function (input) {\n            if (!input) {\n                input = 0;\n            }\n            else {\n                input = moment(input).utcOffset();\n            }\n\n            return (this.utcOffset() - input) % 60 === 0;\n        },\n\n        daysInMonth : function () {\n            return daysInMonth(this.year(), this.month());\n        },\n\n        dayOfYear : function (input) {\n            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;\n            return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n        },\n\n        quarter : function (input) {\n            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n        },\n\n        weekYear : function (input) {\n            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        isoWeekYear : function (input) {\n            var year = weekOfYear(this, 1, 4).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        week : function (input) {\n            var week = this.localeData().week(this);\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        isoWeek : function (input) {\n            var week = weekOfYear(this, 1, 4).week;\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        weekday : function (input) {\n            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n            return input == null ? weekday : this.add(input - weekday, 'd');\n        },\n\n        isoWeekday : function (input) {\n            // behaves the same as moment#day except\n            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n            // as a setter, sunday should belong to the previous week.\n            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n        },\n\n        isoWeeksInYear : function () {\n            return weeksInYear(this.year(), 1, 4);\n        },\n\n        weeksInYear : function () {\n            var weekInfo = this.localeData()._week;\n            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units]();\n        },\n\n        set : function (units, value) {\n            var unit;\n            if (typeof units === 'object') {\n                for (unit in units) {\n                    this.set(unit, units[unit]);\n                }\n            }\n            else {\n                units = normalizeUnits(units);\n                if (typeof this[units] === 'function') {\n                    this[units](value);\n                }\n            }\n            return this;\n        },\n\n        // If passed a locale key, it will set the locale for this\n        // instance.  Otherwise, it will return the locale configuration\n        // variables for this instance.\n        locale : function (key) {\n            var newLocaleData;\n\n            if (key === undefined) {\n                return this._locale._abbr;\n            } else {\n                newLocaleData = moment.localeData(key);\n                if (newLocaleData != null) {\n                    this._locale = newLocaleData;\n                }\n                return this;\n            }\n        },\n\n        lang : deprecate(\n            'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n            function (key) {\n                if (key === undefined) {\n                    return this.localeData();\n                } else {\n                    return this.locale(key);\n                }\n            }\n        ),\n\n        localeData : function () {\n            return this._locale;\n        },\n\n        _dateUtcOffset : function () {\n            // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n            // https://github.com/moment/moment/pull/1871\n            return -Math.round(this._d.getTimezoneOffset() / 15) * 15;\n        }\n\n    });\n\n    function rawMonthSetter(mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(),\n                daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function rawGetter(mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function rawSetter(mom, unit, value) {\n        if (unit === 'Month') {\n            return rawMonthSetter(mom, value);\n        } else {\n            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n\n    function makeAccessor(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                rawSetter(this, unit, value);\n                moment.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return rawGetter(this, unit);\n            }\n        };\n    }\n\n    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);\n    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);\n    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);\n    // moment.fn.month is defined separately\n    moment.fn.date = makeAccessor('Date', true);\n    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));\n    moment.fn.year = makeAccessor('FullYear', true);\n    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));\n\n    // add plural methods\n    moment.fn.days = moment.fn.day;\n    moment.fn.months = moment.fn.month;\n    moment.fn.weeks = moment.fn.week;\n    moment.fn.isoWeeks = moment.fn.isoWeek;\n    moment.fn.quarters = moment.fn.quarter;\n\n    // add aliased format methods\n    moment.fn.toJSON = moment.fn.toISOString;\n\n    // alias isUtc for dev-friendliness\n    moment.fn.isUTC = moment.fn.isUtc;\n\n    /************************************\n        Duration Prototype\n    ************************************/\n\n\n    function daysToYears (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        return days * 400 / 146097;\n    }\n\n    function yearsToDays (years) {\n        // years * 365 + absRound(years / 4) -\n        //     absRound(years / 100) + absRound(years / 400);\n        return years * 146097 / 400;\n    }\n\n    extend(moment.duration.fn = Duration.prototype, {\n\n        _bubble : function () {\n            var milliseconds = this._milliseconds,\n                days = this._days,\n                months = this._months,\n                data = this._data,\n                seconds, minutes, hours, years = 0;\n\n            // The following code bubbles up values, see the tests for\n            // examples of what that means.\n            data.milliseconds = milliseconds % 1000;\n\n            seconds = absRound(milliseconds / 1000);\n            data.seconds = seconds % 60;\n\n            minutes = absRound(seconds / 60);\n            data.minutes = minutes % 60;\n\n            hours = absRound(minutes / 60);\n            data.hours = hours % 24;\n\n            days += absRound(hours / 24);\n\n            // Accurately convert days to years, assume start from year 0.\n            years = absRound(daysToYears(days));\n            days -= absRound(yearsToDays(years));\n\n            // 30 days to a month\n            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n            months += absRound(days / 30);\n            days %= 30;\n\n            // 12 months -> 1 year\n            years += absRound(months / 12);\n            months %= 12;\n\n            data.days = days;\n            data.months = months;\n            data.years = years;\n        },\n\n        abs : function () {\n            this._milliseconds = Math.abs(this._milliseconds);\n            this._days = Math.abs(this._days);\n            this._months = Math.abs(this._months);\n\n            this._data.milliseconds = Math.abs(this._data.milliseconds);\n            this._data.seconds = Math.abs(this._data.seconds);\n            this._data.minutes = Math.abs(this._data.minutes);\n            this._data.hours = Math.abs(this._data.hours);\n            this._data.months = Math.abs(this._data.months);\n            this._data.years = Math.abs(this._data.years);\n\n            return this;\n        },\n\n        weeks : function () {\n            return absRound(this.days() / 7);\n        },\n\n        valueOf : function () {\n            return this._milliseconds +\n              this._days * 864e5 +\n              (this._months % 12) * 2592e6 +\n              toInt(this._months / 12) * 31536e6;\n        },\n\n        humanize : function (withSuffix) {\n            var output = relativeTime(this, !withSuffix, this.localeData());\n\n            if (withSuffix) {\n                output = this.localeData().pastFuture(+this, output);\n            }\n\n            return this.localeData().postformat(output);\n        },\n\n        add : function (input, val) {\n            // supports only 2.0-style add(1, 's') or add(moment)\n            var dur = moment.duration(input, val);\n\n            this._milliseconds += dur._milliseconds;\n            this._days += dur._days;\n            this._months += dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        subtract : function (input, val) {\n            var dur = moment.duration(input, val);\n\n            this._milliseconds -= dur._milliseconds;\n            this._days -= dur._days;\n            this._months -= dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units.toLowerCase() + 's']();\n        },\n\n        as : function (units) {\n            var days, months;\n            units = normalizeUnits(units);\n\n            if (units === 'month' || units === 'year') {\n                days = this._days + this._milliseconds / 864e5;\n                months = this._months + daysToYears(days) * 12;\n                return units === 'month' ? months : months / 12;\n            } else {\n                // handle milliseconds separately because of floating point math errors (issue #1867)\n                days = this._days + Math.round(yearsToDays(this._months / 12));\n                switch (units) {\n                    case 'week': return days / 7 + this._milliseconds / 6048e5;\n                    case 'day': return days + this._milliseconds / 864e5;\n                    case 'hour': return days * 24 + this._milliseconds / 36e5;\n                    case 'minute': return days * 24 * 60 + this._milliseconds / 6e4;\n                    case 'second': return days * 24 * 60 * 60 + this._milliseconds / 1000;\n                    // Math.floor prevents floating point math errors here\n                    case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;\n                    default: throw new Error('Unknown unit ' + units);\n                }\n            }\n        },\n\n        lang : moment.fn.lang,\n        locale : moment.fn.locale,\n\n        toIsoString : deprecate(\n            'toIsoString() is deprecated. Please use toISOString() instead ' +\n            '(notice the capitals)',\n            function () {\n                return this.toISOString();\n            }\n        ),\n\n        toISOString : function () {\n            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n            var years = Math.abs(this.years()),\n                months = Math.abs(this.months()),\n                days = Math.abs(this.days()),\n                hours = Math.abs(this.hours()),\n                minutes = Math.abs(this.minutes()),\n                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\n            if (!this.asSeconds()) {\n                // this is the same as C#'s (Noda) and python (isodate)...\n                // but not other JS (goog.date)\n                return 'P0D';\n            }\n\n            return (this.asSeconds() < 0 ? '-' : '') +\n                'P' +\n                (years ? years + 'Y' : '') +\n                (months ? months + 'M' : '') +\n                (days ? days + 'D' : '') +\n                ((hours || minutes || seconds) ? 'T' : '') +\n                (hours ? hours + 'H' : '') +\n                (minutes ? minutes + 'M' : '') +\n                (seconds ? seconds + 'S' : '');\n        },\n\n        localeData : function () {\n            return this._locale;\n        },\n\n        toJSON : function () {\n            return this.toISOString();\n        }\n    });\n\n    moment.duration.fn.toString = moment.duration.fn.toISOString;\n\n    function makeDurationGetter(name) {\n        moment.duration.fn[name] = function () {\n            return this._data[name];\n        };\n    }\n\n    for (i in unitMillisecondFactors) {\n        if (hasOwnProp(unitMillisecondFactors, i)) {\n            makeDurationGetter(i.toLowerCase());\n        }\n    }\n\n    moment.duration.fn.asMilliseconds = function () {\n        return this.as('ms');\n    };\n    moment.duration.fn.asSeconds = function () {\n        return this.as('s');\n    };\n    moment.duration.fn.asMinutes = function () {\n        return this.as('m');\n    };\n    moment.duration.fn.asHours = function () {\n        return this.as('h');\n    };\n    moment.duration.fn.asDays = function () {\n        return this.as('d');\n    };\n    moment.duration.fn.asWeeks = function () {\n        return this.as('weeks');\n    };\n    moment.duration.fn.asMonths = function () {\n        return this.as('M');\n    };\n    moment.duration.fn.asYears = function () {\n        return this.as('y');\n    };\n\n    /************************************\n        Default Locale\n    ************************************/\n\n\n    // Set default locale, other locale will inherit from English.\n    moment.locale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    /* EMBED_LOCALES */\n\n    /************************************\n        Exposing Moment\n    ************************************/\n\n    function makeGlobal(shouldDeprecate) {\n        /*global ender:false */\n        if (typeof ender !== 'undefined') {\n            return;\n        }\n        oldGlobalMoment = globalScope.moment;\n        if (shouldDeprecate) {\n            globalScope.moment = deprecate(\n                    'Accessing Moment through the global scope is ' +\n                    'deprecated, and will be removed in an upcoming ' +\n                    'release.',\n                    moment);\n        } else {\n            globalScope.moment = moment;\n        }\n    }\n\n    // CommonJS module is defined\n    if (hasModule) {\n        module.exports = moment;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function (require, exports, module) {\n            if (module.config && module.config() && module.config().noGlobal === true) {\n                // release the global variable\n                globalScope.moment = oldGlobalMoment;\n            }\n\n            return moment;\n        });\n        makeGlobal(true);\n    } else {\n        makeGlobal();\n    }\n}).call(this);\n"]}